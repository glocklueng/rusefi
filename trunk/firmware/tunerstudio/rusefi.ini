; this is TunerStudio project for www.rusefi.com DIY engine management system

[TunerStudio]
   queryCommand   = "H"
   signature    = "MShift v0.01" ; signature is expected to be 7 or more characters.

[Constants]
   endianness          = little
   nPages              = 2
   pageIdentifier      = "\x00\x00",            "\x01\x00"
   pageReadCommand     = "C\x00\x00",           "C\x01\x00"
   burnCommand         = "B\x00\x00",           "B\x01\x00"
   pageSize            = 3204,4
   pageValueWrite      = "W\x00\x00%2o%v",      "W\x01\x00%2o%v"


;comms settings - you may need to tweak these for USB serial
;e.g. put writeblocks off and add an interwrite delay
   pageActivationDelay = 50
   writeBlocks = on
   interWriteDelay = 10
;end USB settings

   page = 1                               
   ;  name      			= bits,   type, offset,  bits
   ;  name           		= array,  type, offset,  shape, units,     scale, translate,    lo,      hi, digits
   ;  name       			= scalar, type, offset,         units,     scale, translate,    lo,      hi, digits

	injectorLag		        = scalar,  F32,    0,          "msec",     1,     0,      -10,   25.50,  2; size 4
	injectorFlow	     	= scalar,  F32,    4,          "cm3/min",  1,     0,      0,   1000,   2; size 4
	battInjectorLagCorrBins	= array,   F32,    8,   [8],   "V",        1,     0,      0.0,    20.0,   2; size 32
	battInjectorLagCorr	    = array,   F32,    40,  [8],   "ms/V",     1,     0,      0.0,    50.0,   2; size 32

	cltFuelCorrBins		    = array,   F32,    72,  [16],  "C",        1,     0,      0.0,    120.0,  2; size 64
	cltFuelCorr             = array,   F32,    136, [16],  "%",      100,     0,      0.0,    500.0,   2; size 64

	iatFuelCorrBins         = array,   F32,    200, [16],  "C",        1,     0,      0.0,    50.0,   2; size 64
	iatFuelCorr             = array,   F32,    264, [16],  "%",      100,     0,      0.0,    500.0,   2; size 64      
	
	rpmHardLimit            = scalar,  S16,    328,        "RPM",      1,     0,        0, 25000, 1; size 2		
	
	tpsMin                  = scalar,  S16,    330,        "ADC",      1,     0,    0, 1023,      0 ; * (  2 bytes)
   	tpsMax                  = scalar,  S16,    332,        "ADC",      1,     0,    0, 1023,      0 ; * (  2 bytes)		
	analogChartMode         = scalar,  S16,    334,        "int",      1,     0,    0, 1023,      0 ; * (  2 bytes)		
    
	CrankingCoolantTempMin  = scalar,  F32,    336,        "°C",       1,     0,    -40, 200,     1;     size 4
	CrankingCoolantTempMax  = scalar,  F32,    340,        "°C",       1,     0,    -40, 200,     1;     size 4
	CrankingMinTempPW       = scalar,  F32,    344,        "ms",       1,     0,    0, 20,     1;     size 4
	CrankingMaxTempPW       = scalar,  F32,    348,        "ms",       1,     0,    0, 20,     1;     size 4
	crankingRpm             = scalar,  S16,    352,        "RPM",      1,     0,    0, 3000,      0 ; * (  2 bytes)
	
	mapSamplingAngleBins    = array,   F32,    356, [8],   "RPM",      1,     0,   0.0,    18000,   2; size 64
	mapSamplingAngle        = array,   F32,    388, [8],   "deg",      1,     0,   0.0,    90,   2; size 64
	mapSamplingWindowBins   = array,   F32,    420, [8],   "RPM",      1,     0,   0.0,    18000,   2; size 64
	mapSamplingWindow       = array,   F32,    452, [8],   "deg",      1,     0,   0.0,    90,   2; size 64
	
	mapMin                  = scalar,  F32,    484,        "kpa",      1,     0,    0, 450,     2;     size 4
	mapMax                  = scalar,  F32,    488,        "kpa",      1,     0,    0, 450,     2;     size 4
	;mapRange
	;channel

	clt_t1                  = scalar,  F32,    500,        "°C",       1,     0,    -40, 200,     1;     size 4
	clt_t2                  = scalar,  F32,    504,        "°C",       1,     0,    -40, 200,     1;     size 4
	clt_t3                  = scalar,  F32,    508,        "°C",       1,     0,    -40, 200,     1;     size 4
	clt_r1                  = scalar,  F32,    512,        "Ohm",      1,     0,    0, 200000,     1;     size 4
	clt_r2                  = scalar,  F32,    516,        "Ohm",      1,     0,    0, 200000,     1;     size 4
	clt_r3                  = scalar,  F32,    520,        "Ohm",      1,     0,    0, 200000,     1;     size 4
	clt_bias                = scalar,  F32,    524,        "Ohm",      1,     0,    0, 200000,     1;     size 4
	;clt_a   364 size 4
	;clt_b   368 size 4
	;clt_c   372 size 4

	iat_t1                  = scalar,  F32,    540,        "°C",       1,   0,    -40, 200,     1;     size 4
	iat_t2                  = scalar,  F32,    544,        "°C",       1,   0,    -40, 200,     1;     size 4
	iat_t3                  = scalar,  F32,    548,        "°C",       1,   0,    -40, 200,     1;     size 4
	iat_r1                  = scalar,  F32,    552,        "Ohm",      1,   0,    0, 200000,     1;     size 4
	iat_r2                  = scalar,  F32,    556,        "Ohm",      1,   0,    0, 200000,     1;     size 4
	iat_r3                  = scalar,  F32,    560,        "Ohm",      1,   0,    0, 200000,     1;     size 4
	iat_bias                = scalar,  F32,    564,        "Ohm",      1,   0,    0, 200000,     1;     size 4
	;iat_a  404 size 4
	;iat_b  408 size 4
	;iat_c  410 size 4	

	sparkDwellBins          = array,   F32,    580,  [8],   "RPM",     1,   0.0,      0.0,  18000,   2; size 32
	sparkDwell              = array,   F32,    612,  [8],   "ms",	   1,   0.0,      0.0,  30.0,    2; size 32
	
	ignitionTable           = array,   F32,    644,  [16x16],"deg",	   1,   0.0,        0,  60.0,    2; size 1024
	ignitionKeyBins         = array,   F32,    1668, [16],   "Load",   1,   0.0,        0,  300.0,   2; size 64
	ignitionRpmBins         = array,   F32,    1732, [16],   "RPM",	   1,   0.0,        0,  18000.0, 2; size 64
	
	ignitonOffset           = scalar,  U32,    1796,         "RPM",    1,      0,       0,  3000.0,      0 ; size 4
	crankingChargeAngle     = scalar,  F32,    1800,         "RPM",    1,      0,       0,  3000.0,      0 ; size 4
	timingMode              = bits,    U32,    1804, [0:0], "dynamic", "fixed"
	fixedModeTiming         = scalar,  U32,    1808,         "RPM",    1,      0,       0,  3000.0,      0 ; size 4
	engineType              = bits,    U32,    1812, [0:2], "AUDI_AAN", "DODGE_NEON_1995", "FORD_ASPIRE_1996", "FORD_FIESTA", "NISSAN_PRIMERA", "HONDA_ACCORD", "FORD_INLINE_6_1995", "GY6_139QMB"
	
	fuelTable               = array,   F32,    1816, [16x16],"ms",     1,      0,      0.0,    50.0,   2; size 3036
	fuelKeyBins             = array,   F32,    2840, [16],   "V",	   1,      0,      0.0,  10.0,   2; size 132
	fuelRpmBins             = array,   F32,    2904, [16],   "RPM",	   1,      0,      0.0,  25500.0,   2; size 92
	
    injectionPinMode        = bits,    U32,    2968, [0:1], "default", "default inverted", "open", "open inverted"
	ignitionPinMode         = bits,    U32,    2972, [0:1], "default", "default inverted", "open", "open inverted"
	idlePinMode             = bits,    U32,    2976, [0:1], "default", "default inverted", "open", "open inverted"
	fuelPumpPinMode         = bits,    U32,    2980, [0:1], "default", "default inverted", "open", "open inverted"
	malfunctionIndicatorPinMode = bits,U32,    2984, [0:1], "default", "default inverted", "open", "open inverted"

	globalTriggerOffsetAngle = scalar, F32,    2988,         "RPM",    1,      0,       0,  720,      0 ; size 4
	analogInputDividerCoefficient = scalar, F32, 2992,         "RPM",    1,      0,       1,  10.0,        2 ; size 4
	engineLoadMode		= bits,    U32,        2996, [0:1], "MAF", "TPS", "MAP", "SPEED DENSITY"
	VBattDividerCoefficient	= scalar,  F32,    3000,         "RPM",    1,      0,       1,  10.0,        2 ; size 4
	FanONTemperature	= scalar,      F32,    3004,         "°C",    1,      0,       0,  1000.0,        2 ; size 4
	FanOffTemperature	= scalar,      F32,    3008,         "°C",    1,      0,       0,  1000.0,        2 ; size 4
	CanReadEnabled		= bits,        U32,    3012, [0:0], "false", "true"
	CanWriteEnabled		= bits,        U32,    3016, [0:0], "false", "true"
	CanNbcType		    = bits,        U32,    3020, [0:1], "BMW", "FIAT", "VAG" , invalid
	CanSleepPeriod		= scalar,      F32,    3024,         "RPM",    1,      0,       0,  1000.0,        2 ; size 4
	CylindersCount		= bits,        U32,    3028, [0:3], 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16
	IgnitionMode		= bits,        U32,    3032, [0:0], "One coil", "Individual Coils"
	FiringOrder		= bits,        U32,    3036, [0:2], "One Cylinder", "1-3-4-2", "1-2-4-3", "1-3-2-4", "1-5-3-6-2-4", invalid, invalid, invalid
	rpmMultiplier		= scalar,      F32,    3040,         "RPM",    1,      0.0,       0,  1000.0,        2 ; size 4
	displayMode		= bits,        U32,    3044, [0:1], "none", "hd44780", "hd44780 over pcf8574", invalid
	logFormat		= bits,        U32,    3048, [0:0], "native", "Mega Log Viewer"
	unusedDwellBins		= array,   F32,    3052,  [8],   "RPM",     1,   0.0,      0.0,  18000,   2; size 32
	nuusedDwell		= array,   F32,    3084,  [8],   "RPM",     1,   0.0,      0.0,  18000,   2; size 32
	trigger_type		= bits,        U32,    3116, [0:1], "toothed wheel", "ford aspire", "dodge neon", invalid
	isSynchronizationNeeded	= bits,        U32,    3120, [0:0], "false", "true"
	totalToothCount		= scalar,      F32,    3124,         "RPM",    1,      0.0,       0,  1000.0,        2 ; size 4
	skippedToothCount	= scalar,      F32,    3128,         "RPM",    1,      0.0,       0,  1000.0,        2 ; size 4
	syncRatioFrom		= scalar,      F32,    3132,         "RPM",    1,      0.0,       0,  1000.0,        2 ; size 4
	syncRatioTo		= scalar,      F32,    3136,         "RPM",    1,      0.0,       0,  1000.0,        2 ; size 4
	useRiseEdge		= bits,        U32,    3140, [0:0], "false", "true"
	needSecondTriggerInput  = bits,        U32,    3144, [0:0], "false", "true"
	injectionPin1		= bits,        U32,    3148, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin2		= bits,        U32,    3152, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin3		= bits,        U32,    3156, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin4		= bits,        U32,    3160, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin5		= bits,        U32,    3164, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin6		= bits,        U32,    3168, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3"
	injectionPin7		= bits,        U32,    3172, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin8		= bits,        U32,    3176, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin9		= bits,        U32,    3180, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin10		= bits,        U32,    3184, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin11		= bits,        U32,    3188, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	injectionPin12		= bits,        U32,    3192, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   
	fuelPumpPin		= bits,        U32,    3196, [0:1], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3";, "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15",  "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15"   


   page = 2
	idleValvePin		= bits,        U32,    0, [0:6], "GPIOA_0", "GPIOA_1", "GPIOA_2", "GPIOA_3", "GPIOA_4", "GPIOA_5", "GPIOA_6", "GPIOA_7", "GPIOA_8", "GPIOA_9", "GPIOA_10", "GPIOA_11", "GPIOA_12", "GPIOA_13", "GPIOA_14", "GPIOA_15",  "GPIOB_0", "GPIOB_1", "GPIOB_2", "GPIOB_3", "GPIOB_4", "GPIOB_5", "GPIOB_6", "GPIOB_7", "GPIOB_8", "GPIOB_9", "GPIOB_10", "GPIOB_11", "GPIOB_12", "GPIOB_13", "GPIOB_14", "GPIOB_15", "GPIOC_0", "GPIOC_1", "GPIOC_2", "GPIOC_3", "GPIOC_4", "GPIOC_5", "GPIOC_6", "GPIOC_7", "GPIOC_8", "GPIOC_9", "GPIOC_10", "GPIOC_11", "GPIOC_12", "GPIOC_13", "GPIOC_14", "GPIOC_15", "GPIOD_0", "GPIOD_1", "GPIOD_2", "GPIOD_3", "GPIOD_4", "GPIOD_5", "GPIOD_6", "GPIOD_7", "GPIOD_8", "GPIOD_9", "GPIOD_10", "GPIOD_11", "GPIOD_12", "GPIOD_13", "GPIOD_14", "GPIOD_15", "GPIOE_0", "GPIOE_1", "GPIOE_2", "GPIOE_3", "GPIOE_4", "GPIOE_5", "GPIOE_6", "GPIOE_7", "GPIOE_8", "GPIOE_9", "GPIOE_10", "GPIOE_11", "GPIOE_12", "GPIOE_13", "GPIOE_14", "GPIOE_15",    invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,    invalid,    invalid,    invalid,    invalid,    invalid,    invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,    invalid,    invalid,    invalid,    invalid,    invalid,    invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,   invalid,    invalid,    invalid,    invalid,    invalid,    invalid,    invalid



[OutputChannels]
   ochGetCommand    = "O"


   ochBlockSize     =  48

   ;  name            = class,  type, offset,      shape,  units,       scale, translate,    lo,      hi, digits
      rpm             = scalar,  U32,      0,             "RPM",            1,   0.00000,  0.00,  3000.0,      0 ; * (  4 bytes)
#if CELSIUS
      coolant         = scalar,  F32,      4,              "°C",            1,       0.0
#else
      coolant         = scalar,  F32,      4,              "°F",         { 0.01 * 9/5 },     3200.00
#endif
#if CELSIUS
      intake          = scalar,  F32,      8,              "°C",            1,       0.0
#else
      intake          = scalar,  F32,      8,              "°C",            1,       0.0
#endif
      TPS             = scalar,  F32,     12,               "%",            1,         0
      MAF             = scalar,  F32,     16,               "V",            1,         0
      AFR             = scalar,  F32,     20,             "AFR",            1,       0.0,  0.00,  25.5,        1 ;
      fuelload	      = scalar,	 F32,     24,	            "%",            1,       0.0 ; Blend of MAP and TPS, depends on algorithm
      VBatt	      = scalar,	 F32,     28,	            "V",            1,       0.0, 8, 21;
      tpsADC          = scalar,  U16,     32,             "ADC",            1,       0.0;
      alignmet        = scalar,  U16,     34,              "al",            1,       0.0;
      atmPres         = scalar,  F32,     36,             "pres",           1,       0.0;
      MAP             = scalar,  F32,     40,              "MAP",           1,       0.0;
      Check_engine    = bits,    U32,    44, [0:0], "true", "false";
      time            = { timeNow }

[CurveEditor]
	curve = dwellCorrection, "Dwell time RPM based"
      columnLabel = "RPM", "Dwell"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  30, 10
      xBins       = sparkDwellBins, rpm
      yBins       = sparkDwell
      gauge       = rpm
    
   curve = mapSamplingAngleCurve, "MAP Sampling Angle"
      columnLabel = "RPM", "Angle"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  180, 10
      xBins       = mapSamplingAngleBins, rpm
      yBins       = mapSamplingAngle
      gauge       = rpm
   
   curve = mapSamplingWindowCurve, "MAP Sampling Window"
      columnLabel = "RPM", "Window"
      xAxis       =  0, 8000, 10
      yAxis       =  0,  180, 10
      xBins       = mapSamplingWindowBins, rpm
      yBins       = mapSamplingWindow
      gauge       = rpm

   curve = injectorsDeadTime, "Injector Dead Time Battery Correction"
      columnLabel = "Voltage", "Dead Time"
      xAxis       =  8, 21, 10
      yAxis       = -3,  3, 10
      xBins       = battInjectorLagCorrBins, VBatt
      yBins       = battInjectorLagCorr
      gauge       = VBattGauge
      
   curve = iatFuelCorrCurve, "Intake air temp fuel correction"
      columnLabel = "Coolant", "Correction"
      xAxis       =  -40, 120, 10
      yAxis       =  -300,  300, 10
      xBins       = iatFuelCorrBins, intake
      yBins       = iatFuelCorr
      gauge       = IATGauge
	
	curve = cltFuelCorrCurve, "Coolant temp fuel correction"
      columnLabel = "Coolant", "Correction"
      xAxis       =  -40, 120, 10
      yAxis       =  -300,  300, 10
      xBins       = cltFuelCorrBins, coolant
      yBins       = cltFuelCorr
      gauge       = CLTGauge


[TableEditor]
   ;       table_id,    map3d_id,    "title",      page
   table = fuelTableTbl,  fuelTableMap,  "Fuel Table",   1
      ;       constant, variable
      xBins       = fuelRpmBins,  rpm
      yBins       = fuelKeyBins,  MAF
      zBins       = fuelTable

      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"
    
   table = ignitionTableTbl,  ignitionTableMap,  "Ignition Table",   1
      ;       constant, variable
      xBins       = ignitionRpmBins,  rpm
      yBins       = ignitionKeyBins,  TPS
      zBins       = ignitionTable
      gridHeight  = 2.0
      gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
      upDownLabel = "(RICHER)", "(LEANER)"

[GaugeConfigurations]

   ;Name               Var            Title                 Units        Lo      Hi      LoD    LoW       HiW   HiD    vd  ld
   tachometer        = rpm,           "Engine Speed",       "RPM",       0,    8000,     200,    500,    6000,  6000,   0,   0
   CLTGauge          = coolant,       "Coolant Temp",        "°C",      -40,    140,     -15,      1,      95,   110,   1,   1
   IATGauge          = intake,     "Intake Air Temp",        "°C",      -40,    140,     -15,      1,      95,   110,   1,   1
   throttleGauge     = TPS,      "Throttle Position",         "%",        0,    100,       0,      0,     100,   100,   0,   0
   afr1Gauge         = AFR,       "Air:Fuel Ratio 1",          "",       10,   19.4,      12,     13,      15,    16,   2,   2
   mafGauge          = MAF,          "Mass Air Flow",         "v",        0,      5,       0,      1,       3,     4,   1,   1
   VBattGauge        = VBatt,      "Battery Voltage",         "V",        8,      21,      9,      10,     17,    19,   1,   1
   tpsADCGauge       = tpsADC,             "tps ADC",       "ADC",        0,      1024,      0,      0,     0,     0,   0,   0	
   atmPresCGauge     = atmPres,        "atmo pressu",       "kPa",        0,      1024,      0,      0,     0,     0,   0,   0	
   mapCGauge         = MAP,                    "MAP",       "kPa",        0,      1024,      0,      0,     0,     0,   0,   0	

[FrontPage]
   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4
   ;    5  6  7  8

   ; currently a minimum of 6 gauges must be on the dash, this appears to be an old not needed limitation. next release 1 will work.
   gauge1 = tachometer
   gauge2 = CLTGauge
   gauge3 = throttleGauge
   gauge4 = mafGauge
   gauge5 = afr1Gauge
   gauge6 = tpsADCGauge
;   gauge7 = IATGauge



;         =   expression,            off-label,            on-label,            off-bg, off-fg, on-bg, on-fg
    indicator = { Check_engine }, "ok",      "Check engine",       green,  black,  red, black
   

[Datalog]
   ;       Channel          Label          Type    Format
   entry = time,            "Time",        float,  "%.3f"
   entry = rpm,             "RPM",         int,    "%d"
   entry = coolant,         "CLT",         float,  "%.1f"

[Menu]

	menu = "&Engine"
		subMenu = engineChars,			"&Engine Characteristics"
		subMenu = boardProp,			"&Board properties"
		subMenu = injChars,			"&injector Characteristicks"
		subMenu = injectorsDeadTime,		"&Injectors Dead Time"
	menu = "&Sensors"
		subMenu = clt_thermistor,		"&CLT Thermistor"
		subMenu = iat_thermistor,		"&IAT Thermistor"
		subMenu = mapSettings,			"MAP sensor settings"
		subMenu = mapSamplingAngleCurve,	"Map sampling angle"
		subMenu = mapSamplingWindowCurve,	"Map sampling window"
		subMenu = triggerConfiguration,		"&Trigger configuration"
	menu = "&Settings"
		subMenu = generalSettings,		"General"
		subMenu = fuelTableTbl,			"&Fuel Table"		
		subMenu = ignitionTableTbl,		"&Ignition Table"
		subMenu = iatFuelCorrCurve,		"I&ntake air temp fuel correction"
		subMenu = cltFuelCorrCurve,		"C&oolant temp fuel correction"
		subMenu = dwellCorrection,		"Dwell time correction"		
	menu = "&Tuning"
;		subMenu = std_realtime,			"&Realtime Display"
;		subMenu = std_warmup,			"&Warmup Wizard"
      subMenu = dwellCorrection,   "&Dwell correction"
      subMenu = crankingFuel,      "&Cranking Fuel"
      subMenu = ignitionTableMap,      "&Ignition Map"           
      subMenu = fuelTableMap,      "&Fiel Table"           

[UserDefined]

	dialog = injChars, "Injector Characteristics"
		field = "Injector Open Time",			injectorLag
		field = "Injector Flow",         	    injectorFlow


	dialog = generalSettings, "General"
		field = "analog chart",         	    analogChartMode
;		field = "Cranking RPM limit",         	    crankingRpm
	
	dialog = engineChars, "Engine Characteristics"
		;field = "Engine Displacement",         engineDisplacement
		field = "Engine Type",			engineType
		field = "RPM Hard Limit",         	    rpmHardLimit
		field = "Cranking RPM limit",           crankingRpm
		field = "injectionPinMode",         	    injectionPinMode
		field = "ignitionPinMode",         	    ignitionPinMode
		field = "idlePinMode",         	    idlePinMode
		field = "fuelPumpPinMode",         	    fuelPumpPinMode
		field = "malfunctionIndicatorPinMode",         	    malfunctionIndicatorPinMode
		field = "globalTriggerOffsetAngle",         	    globalTriggerOffsetAngle
 		field = "engineLoadMode",		engineLoadMode	
		field = "timingMode",			timingMode
		field = "Fan On Temperature",	FanONTemperature
		field = "Fan Off Temperature",	FanOffTemperature
		field = "Can Read Enabled",	CanReadEnabled
		field = "Can Write Enabled",	CanWriteEnabled
		field = "Can Nbc Type",		CanNbcType
		field = "Can Sleep Period",	CanSleepPeriod	
		field = "Cylinders Count",	CylindersCount
		field = "Ignition Mode",	IgnitionMode
		field = "Firing Order",		FiringOrder
		field = "rpm Multiplier",	rpmMultiplier
		field = "display Mode",		displayMode
		field = "log format",	logFormat

		



	dialog = boardProp, "Board properties"
		field = "analog Input Divider Coefficient",	analogInputDividerCoefficient 
		field = "Battery voltage Divider Coefficient",		VBattDividerCoefficient
		field = "Injection Pin 1 ",			injectionPin1
		field = "Injection Pin 2 ",			injectionPin2
		field = "Injection Pin 3 ",			injectionPin3
		field = "Injection Pin 4 ",			injectionPin4
		field = "Injection Pin 5 ",			injectionPin5
		field = "Injection Pin 6 ",			injectionPin6
		field = "Injection Pin 7 ",			injectionPin7
		field = "Injection Pin 8 ",			injectionPin8
		field = "Injection Pin 9 ",			injectionPin9
		field = "Injection Pin 10 ",			injectionPin10
		field = "Injection Pin 11 ",			injectionPin11
		field = "Injection Pin 12 ",			injectionPin12
		field = "Fuel Pump Pin",			fuelPumpPin
		field = "Idle Valve Pin",			idleValvePin

	dialog = clt_thermistor, "CLT Thermistor Settings"
		field = "Here is three pairs of thermistor temperature and his resistance."
		field = "Typical temperatures is -40°C, 0°C and 100°C"
		field = ""
		field = "Temperature 1",     			clt_t1		
		field = "Resistance 1",         	   	clt_r1
		field = ""
		field = "Temperature 2",         	    clt_t2
		field = "Resistance 2",         	    clt_r2
		field = ""
		field = "Temperature 3",         	    clt_t3
		field = "Resistance 3",         	    clt_r3
		field = ""
		field = "Bias Resistor Value",    	    clt_bias
		field = ""
		
	dialog = iat_thermistor, "IAT Thermistor Settings"
		field = "Here is three pairs of thermistor temperature and his resistance."
		field = "Typical temperatures is -40°C, 0°C and 100°C"
		field = ""
		field = "Temperature 1",                    iat_t1		
		field = "Resistance 1",         	    iat_r1
		field = ""
		field = "Temperature 2",         	    iat_t2
		field = "Resistance 2",         	    iat_r2
		field = ""
		field = "Temperature 3",         	    iat_t3
		field = "Resistance 3",         	    iat_r3
		field = ""
		field = "Bias Resistor Value",    	    iat_bias
		field = ""
	
	dialog = mapSettings, "MAP Sensor Settings"		
		field = "MAP at minimum voltage",                mapMin	
		field = "MAP at maximum voltage",                mapMax
		
	dialog = crankingFuel, "Cranking Fuel"				
		field = "Minimum temp point",                CrankingCoolantTempMin
		field = "Pulse Width at Minimum temp point", CrankingMinTempPW
		field = ""
		field = "Maximum temp point",                CrankingCoolantTempMax
		field = "Pulse Width at Maximum temp point", CrankingMaxTempPW
		field = ""
	
	dialog = mapSettings, "MAP Sensor Settings"		
		field = "MAP at minimum voltage",                mapMin	
		field = "MAP at maximum voltage",                mapMax
	
	dialog = triggerConfiguration,			"Trigger configuration"
		field = "trigger type",			trigger_type
		field = "Synchronization Needed?",	isSynchronizationNeeded	
		field = "total Tooth Count",		totalToothCount
		field = "skipped Tooth Count",		skippedToothCount
		field = "sync Ratio From",			syncRatioFrom
		field = "sync Ratio To",			syncRatioTo
		field = "use Rise Edge?",			useRiseEdge
		field = "needed Second Trigger Input?",		needSecondTriggerInput
			
	
	dialog = crankingFuel, "Cranking Fuel"				
		field = "Minimum temp point",                CrankingCoolantTempMin
		field = "Pulse Width at Minimum temp point", CrankingMinTempPW
		field = ""
		field = "Maximum temp point",                CrankingCoolantTempMax
		field = "Pulse Width at Maximum temp point", CrankingMaxTempPW 
