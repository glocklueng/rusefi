Index: controllers/system/pwm_generator_logic.cpp
===================================================================
--- controllers/system/pwm_generator_logic.cpp	(revision 2920)
+++ controllers/system/pwm_generator_logic.cpp	(working copy)
@@ -8,7 +8,7 @@
 #include "pwm_generator_logic.h"
 #include "engine_math.h"
 
-PwmConfig::PwmConfig(float *st) : multiWave(st) {
+PwmConfig::PwmConfig(float *st) : multiWave(st, sr) {
 
 }
 
Index: controllers/trigger/trigger_structure.cpp
===================================================================
--- controllers/trigger/trigger_structure.cpp	(revision 2924)
+++ controllers/trigger/trigger_structure.cpp	(working copy)
@@ -21,8 +21,9 @@
 #include "main.h"
 #include "trigger_structure.h"
 
-multi_wave_s::multi_wave_s(float *switchTimes) {
+multi_wave_s::multi_wave_s(float *switchTimes, single_wave_s *waves) {
 	this->switchTimes = switchTimes;
+	this->waves = waves;
 }
 
 void multi_wave_s::reset(void) {
@@ -36,7 +37,7 @@
 }
 
 trigger_shape_s::trigger_shape_s() :
-		wave(switchTimes) {
+		wave(switchTimes, sr) {
 	reset();
 }
 
Index: controllers/trigger/trigger_structure.h
===================================================================
--- controllers/trigger/trigger_structure.h	(revision 2924)
+++ controllers/trigger/trigger_structure.h	(working copy)
@@ -36,7 +36,7 @@
 
 class multi_wave_s {
 public:
-	multi_wave_s(float *st);
+	multi_wave_s(float *st, single_wave_s *waves);
 	void reset(void);
 	float getSwitchTime(int phaseIndex) const;
 	void setSwitchTime(int phaseIndex, float value);
@@ -50,7 +50,7 @@
 	 * Number of signal wires
 	 */
 	int waveCount;
-	single_wave_s waves[PWM_PHASE_MAX_WAVE_PER_PWM];
+	single_wave_s *waves;
 //private:
 	/**
 	 * values in the (0..1] range which refer to points within the period at at which pin state should be changed
@@ -90,6 +90,11 @@
 	int triggerShapeSynchPointIndex;
 private:
 	float switchTimes[PWM_PHASE_MAX_COUNT];
+
+	single_wave_s waves[2];
+
+	single_wave_s sr[2] = {waves[0], waves[1]};
+
 };
 
 
Index: svnversion.h
===================================================================
--- svnversion.h	(revision 2920)
+++ svnversion.h	(working copy)
@@ -1,4 +1,4 @@
 // This file was generated by Version2Header
 #ifndef SVN_VERSION
-#define SVN_VERSION 2913
+#define SVN_VERSION 2919
 #endif
